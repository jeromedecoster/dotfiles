#!/bin/bash

# return the local repository root of a svn repo
# return nothing if not inside a svn directory
# example, inside the folder /Volumes/Documents/work/projectname/trunk/home/css/
# execute 'svnroot' return: /Volumes/Documents/work/projectname/trunk
# svnroot accept also 1 argument (a path to a directory or a file)
# execute 'svnroot /Volumes/Documents/work/projectname/trunk/home/css/style.css'
# or execute 'svnroot /Volumes/Documents/work/projectname/trunk/home/css'
# both will return: /Volumes/Documents/work/projectname/trunk
# NOTE: Ruby or Python must be installed to transform a relative path to an absolute path

ruby=$(type -P ruby)
python=$(type -P python)
if [[ "$ruby" || "$python" ]]; then
    if [[ $# -le 1 ]]; then

        # without argument, folder is the pwd with a trailing '/'
        if [[ $# -eq 0 ]]; then
            folder="$(pwd)/"
        else
            # if the argument is a directory, just add a trailing '/'
            # note: 2 trailing slash doesn't break things... but it will
            # be removed some lines below (for a cleaner error message)
            if [[ -d "$1" ]]; then
                folder="$1/"
            # if the argument is a file, get the parent directory and
            # add a trailing '/'
            elif [[ -f "$1" ]]; then
                folder="$(dirname "$1")/"
            fi
        fi

        RED="\033[0;31m"
        RES="\033[0m"
        
        if [[ "$folder" ]]; then
            # if two trailing slash '//' transform as a simple '/'
            folder=$(echo "$folder" | sed -e 's/\/\/$/\//g')

            info="$(svn info "$folder" 2> /dev/null)"
            if [[ "$info" ]]; then
                # uuid of the current svn repo
                uuid=$(echo "$info" | awk '/^Repository UUID:/ { print $3 }')
                # goes up, directory by directory and test if it's still a svn repo
                # or if the repo has a different uuid to find the root repo directory
                while true; do
                    info=$(svn info "$folder../" 2> /dev/null)
                    if [[ "$info" && $(echo "$info" \
                                       | awk '/^Repository UUID:/ { print $3 }') == "$uuid" ]]; then
                        folder="$folder../"
                        continue
                    else
                        if [[ "$ruby" ]]; then
                            echo $(ruby -e "print File.expand_path '$folder'")
                        else
                            echo $(python -c "import os;print(os.path.abspath('$folder'))")
                        fi
                        break
                    fi
                done
            # the variable info is not defined
            # write the error message in the stderr and exit 1
            else
                echo -e "error: $RED$folder$RES is not a working copy" >&2
                exit 1
            fi
        # the variable folder is not defined if the argument $1
        # is not a real directory or a real file
        # write the error message in the stderr and exit 1
        else
            echo -e "error: the path $RED$1$RES does not exist" >&2
            exit 1
        fi
    
    # if more than 1 argument, write the usage message in the stderr and exit 1
    else
        msg=$(cat <<EOF
usage: svnroot
       svnroot path/to/folder
       svnroot path/to/file
EOF)
        echo -e "$msg" >&2
        exit 1
    fi
# Ruby or Python are not found
# write the error message in the stderr and exit 1
else
    echo -e "error: Ruby or Python is required" >&2
    exit 1
fi
